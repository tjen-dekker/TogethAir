Index: src/main/webapp/WEB-INF/faces-config.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/webapp/WEB-INF/faces-config.xml	(date 1510304646000)
+++ src/main/webapp/WEB-INF/faces-config.xml	(revision )
@@ -19,6 +19,10 @@
         <base-name>Messages</base-name>
         <var>messages</var>
     </resource-bundle>
+    <resource-bundle>
+        <base-name>PriceCalculation</base-name>
+        <var>priceCalculation</var>
+    </resource-bundle>
 </application>
 
 </faces-config>
\ No newline at end of file
Index: src/main/java/com/realdolmen/togethair/services/PriceCalculationService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/realdolmen/togethair/services/PriceCalculationService.java	(revision )
+++ src/main/java/com/realdolmen/togethair/services/PriceCalculationService.java	(revision )
@@ -0,0 +1,59 @@
+package com.realdolmen.togethair.services;
+
+import com.realdolmen.togethair.domain.Booking;
+import com.realdolmen.togethair.domain.Passenger;
+import com.realdolmen.togethair.domain.Seat;
+
+import javax.faces.bean.ManagedProperty;
+import java.util.*;
+
+/**
+ * Created by GWTBF10 on 10/11/2017.
+ */
+public class PriceCalculationService {
+	
+	@ManagedProperty("#{priceCalculation}")
+	private ResourceBundle bundle;
+	
+	public float calculateTotalPrice(Booking booking, boolean usedCreditCard){
+		List<Passenger> passengers = booking.getPassengers();
+		
+		//get margin and discounts
+		float marginOfProfit = Integer.parseInt(bundle.getString("marginOfProfitPercentage"))/100;
+		float creditcardDiscount = Integer.parseInt(bundle.getString("creditcardDiscountPercentage"))/100;
+		float priceOverride = passengers.get(0).getSeat().getFlight().getPriceOverridePercentage()/100;
+		float volumeDiscount=0;
+		
+		//check highest applicable volume discount
+		Map<Integer, Integer> volumeDiscounts = passengers.get(0).getSeat().getFlight().getVolumeDiscounts();
+		Set<Integer> volumeDiscountsKeyset = volumeDiscounts.keySet();
+		int highestApplicable=0;
+		for (Integer i : volumeDiscountsKeyset) {
+			highestApplicable = (passengers.size() > i ? i : highestApplicable);
+		}
+		if(highestApplicable>0)
+			volumeDiscount = volumeDiscounts.get(highestApplicable)/100;
+		
+		float totalPrice=0F;
+		
+		//baseprice for each seat
+		for(Passenger p : passengers){totalPrice +=  p.getSeat().getPrice();}
+		
+		//adding our own margin
+		totalPrice *= 1+marginOfProfit;
+
+		//employee Override
+		totalPrice*=priceOverride;
+		
+		//apply volume discount
+		totalPrice*=1-volumeDiscount;
+		
+		//apply creditcardDiscount
+		if(usedCreditCard) {
+			totalPrice *= 1-creditcardDiscount;
+		}
+		
+		
+		return totalPrice;
+	}
+}
Index: src/main/java/com/realdolmen/togethair/domain/Flight.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/realdolmen/togethair/domain/Flight.java	(date 1510304646000)
+++ src/main/java/com/realdolmen/togethair/domain/Flight.java	(revision )
@@ -7,10 +7,7 @@
 import java.io.Serializable;
 import java.time.LocalDateTime;
 import java.time.ZoneId;
-import java.util.Comparator;
-import java.util.Date;
-import java.util.HashSet;
-import java.util.Set;
+import java.util.*;
 
 /**
  * Created by GWTBF10 on 6/11/2017.
@@ -54,6 +51,17 @@
 	@Future
 	private Date departureDateTime;
 	
+	@ElementCollection
+	@MapKeyColumn(name="volumeDiscountNUmberOfTickets")
+	@Column(name="volumeDiscountPercentage")
+	@CollectionTable(name="volumeDiscounts", joinColumns=@JoinColumn(name="id"))
+	private Map<Integer, Integer> volumeDiscounts= new HashMap<>();
+	
+	@NotNull
+	@DecimalMax(value = "200")
+	@DecimalMin(value = "50")
+	private int priceOverridePercentage=100;
+	
 	public int getFreeSeatsOfClass(TravelClass travelClass){
 		int count =0;
 		for(Seat s : seats){
@@ -97,6 +105,22 @@
 		return duration;
 	}
 	
+	public Map<Integer, Integer> getVolumeDiscounts() {
+		return volumeDiscounts;
+	}
+	
+	public void setVolumeDiscounts(Map<Integer, Integer> volumeDiscounts) {
+		this.volumeDiscounts = volumeDiscounts;
+	}
+	
+	public int getPriceOverridePercentage() {
+		return priceOverridePercentage;
+	}
+	
+	public void setPriceOverridePercentage(int priceOverridePercentage) {
+		this.priceOverridePercentage = priceOverridePercentage;
+	}
+	
 	public void setDuration(int duration) {
 		this.duration = duration;
 	}
Index: src/main/resources/priceCalculation.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- src/main/resources/priceCalculation.properties	(revision )
+++ src/main/resources/priceCalculation.properties	(revision )
@@ -0,0 +1,2 @@
+creditcardDiscountPercentage=2
+marginOfProfitPercentage=10
\ No newline at end of file
Index: src/main/java/com/realdolmen/togethair/domain/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/realdolmen/togethair/domain/User.java	(date 1510304646000)
+++ src/main/java/com/realdolmen/togethair/domain/User.java	(revision )
@@ -36,7 +36,15 @@
 	@Column(length = 80)
 	@Pattern(regexp = "(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)])")
 	private String email;
-
+	
+	public List<Booking> getBookings() {
+		return bookings;
+	}
+	
+	public void setBookings(List<Booking> bookings) {
+		this.bookings = bookings;
+	}
+	
 	public String getFirstName() {return firstName;}
 
 	public void setFirstName(String firstName) {this.firstName = firstName;}
